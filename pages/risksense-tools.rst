.. raw:: html

    <style> .red {color:red} </style>

.. role:: red


======================================
Risksense Tools
======================================
A repository of tools that interact with the RiskSense API.

Application Security Dashboard
*************************
The Application security dashboard is a tool that can be used to view the application security dashboard in the terminal .

Requirements
--------------

This script requires a working installation of Python3 and the
ability to install Python packages.

Installation
--------------

Copy the zip file to your desired location and unzip it.
Using your terminal, navigate to the folder that you just
unzipped. Run the main.py file in the terminal

Configuration
--------------

The configuration file is found at conf/config.toml. This
file is formatted using TOML formatting. Using your preferred
text editor, open this file.


Update the platform URL field to reflect the URL of the
RiskSense platform you use. Update the API key field to
reflect an API key generated by your user. 

The remaining fields in the configuration file should be
configured to reflect your desired values.

The configuration needed inside config.toml are

.. code:: toml

  platform_url = 'https://xxxxx.risksense.com'
  client_id = '0'
  api_key = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

Usage
-------

To execute the script, using your terminal, navigate to the
unzipped folder containing the script. Issue the following
command:

.. code:: python

    python3 appsec.py

       --- OR (depending on your install) ---

    python appsec.py

Fill the necessary data input in the terminal prompts and the
dashboard data will be shown in the terminal

.. note::
    Please check ApplicationSecurity.log for the log of the script for 
    more information of any errors or info while running the script

    Please ensure a folder 'logs' in the same directory as the appsec.py is present.



Executive Dashboard
*************************
The Executive dashboard is a tool that can be used to view the Executive dashboard in the terminal .

Requirements
--------------

This script requires a working installation of Python3 and the
ability to install Python packages.

Installation
--------------

Copy the zip file to your desired location and unzip it.
Using your terminal, navigate to the folder that you just
unzipped. Run the main.py file in the terminal

Configuration
--------------

The configuration file is found at conf/config.toml. This
file is formatted using TOML formatting. Using your preferred
text editor, open this file.


Update the platform URL field to reflect the URL of the
RiskSense platform you use. Update the API key field to
reflect an API key generated by your user. 

The remaining fields in the configuration file should be
configured to reflect your desired values.

The configuration needed inside config.toml are

.. code:: toml

  platform_url = 'https://xxxxx.risksense.com'
  client_id = '0'
  api_key = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

Usage
-------

To execute the script, using your terminal, navigate to the
unzipped folder containing the script. Issue the following
command:

.. code:: python

    python3 executive.py

       --- OR (depending on your install) ---

    python executive.py

Fill the necessary data input in the terminal prompts and the
dashboard data will be shown in the terminal

.. note::
    Please check Executive-dashboard.log for the log of the script for 
    more information of any errors or info while running the script

    Please ensure a folder 'logs' in the same directory as the executive.py is present.


Prioritization Dashboard
*************************
The Prioritization dashboard is a tool that can be used to view the Prioritization dashboard in the terminal .

Requirements
--------------

This script requires a working installation of Python3 and the
ability to install Python packages.

Installation
--------------

Copy the zip file to your desired location and unzip it.
Using your terminal, navigate to the folder that you just
unzipped. Run the main.py file in the terminal

Configuration
--------------

The configuration file is found at conf/config.toml. This
file is formatted using TOML formatting. Using your preferred
text editor, open this file.


Update the platform URL field to reflect the URL of the
RiskSense platform you use. Update the API key field to
reflect an API key generated by your user. 

The remaining fields in the configuration file should be
configured to reflect your desired values.

The configuration needed inside config.toml are

.. code:: toml

  platform_url = 'https://xxxxx.risksense.com'
  client_id = '0'
  api_key = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

Usage
-------

To execute the script, using your terminal, navigate to the
unzipped folder containing the script. Issue the following
command:

.. code:: python

    python3 prioritization.py

       --- OR (depending on your install) ---

    python prioritization.py

Fill the necessary data input in the terminal prompts and the
dashboard data will be shown in the terminal

.. note::
    Please check Prioritization.log for the log of the script for 
    more information of any errors or info while running the script

    Please ensure a folder 'logs' in the same directory as the prioritization.py is present.


Ransomware Dashboard
*************************
The Ransomware dashboard is a tool that can be used to view the Ransomware dashboard in the terminal .

Requirements
--------------

This script requires a working installation of Python3 and the
ability to install Python packages.

Installation
--------------

Copy the zip file to your desired location and unzip it.
Using your terminal, navigate to the folder that you just
unzipped. Run the main.py file in the terminal

Configuration
--------------

The configuration file is found at conf/config.toml. This
file is formatted using TOML formatting. Using your preferred
text editor, open this file.


Update the platform URL field to reflect the URL of the
RiskSense platform you use. Update the API key field to
reflect an API key generated by your user. 

The remaining fields in the configuration file should be
configured to reflect your desired values.

The configuration needed inside config.toml are

.. code:: toml

  platform_url = 'https://xxxxx.risksense.com'
  client_id = '0'
  api_key = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

Usage
-------

To execute the script, using your terminal, navigate to the
unzipped folder containing the script. Issue the following
command:

.. code:: python

    python3 ransomware.py

       --- OR (depending on your install) ---

    python ransomware.py

Fill the necessary data input in the terminal prompts and the
dashboard data will be shown in the terminal

.. note::
    Please check Ransomware.log for the log of the script for 
    more information of any errors or info while running the script

    Please ensure a folder 'logs' in the same directory as the ransomware.py is present.


Sla Overview Dashboard
*************************
The sla overview dashboard is a tool that can be used to view the sla overview dashboard in the terminal .

Requirements
--------------


This script requires a working installation of Python3 and the
ability to install Python packages.

Installation
--------------


Copy the zip file to your desired location and unzip it.
Using your terminal, navigate to the folder that you just
unzipped. Run the main.py file in the terminal

Configuration
--------------

The configuration file is found at conf/config.toml. This
file is formatted using TOML formatting. Using your preferred
text editor, open this file.


Update the platform URL field to reflect the URL of the
RiskSense platform you use. Update the API key field to
reflect an API key generated by your user. 

The remaining fields in the configuration file should be
configured to reflect your desired values.

The configuration needed inside config.toml are

.. code:: toml

  platform_url = 'https://xxxxx.risksense.com'
  client_id = '0'
  api_key = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'

Usage
-------

To execute the script, using your terminal, navigate to the
unzipped folder containing the script. Issue the following
command:

.. code:: python

    python3 slaoverview.py

       --- OR (depending on your install) ---

    python slaoverview.py

Fill the necessary data input in the terminal prompts and the
dashboard data will be shown in the terminal

.. note::
   Please check SLAOverview.log for the log of the script for 
   more information of any errors or info while running the script

   Please ensure a folder 'logs' in the same directory as the slaoverview.py is present.
